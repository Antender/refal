#include <stdbool.h>
#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>

typedef enum TAGS {
    TAGO = 0,
    TAGLB,
    TAGF,
    TAGRB,
    TAGN,
    TAGK,
    TAGR,
    TAGD
} TAGS;

typedef struct linkcb {
    struct linkcb* prev;
    struct linkcb* next;
    TAGS tag;
    union {
        char infoc;
        long coden;
        struct linkcb* codep;
        char* codef;
    } info;
} linkcb;

#define gcoden(p) p->info.coden
#define pcoden(p, W) p->info.coden = W;

typedef struct st {
    struct st* stprev;
    struct st* stnext;
    int state;
    linkcb* dot;
    long step;
    long stop;
    linkcb* view;
    linkcb* store;
} st;

typedef struct REFAL {
    st* crprev;
    st* crnext;
    int upshot;
    linkcb* preva;
    linkcb* nexta;
    linkcb* prevr;
    linkcb* nextr;
    st* currst;
    linkcb* flhead;
    linkcb* svar;
    linkcb* dvar;
    int stmnmb;
    int nostm;
    int tmmode;
    long tmintv;
} REFAL;


#define LBLL sizeof(void*)
#define SMBL (sizeof(long)+sizeof(void*))

#define G_L_B
/* BLF - DBLF for prokrutka - trace debug mode, see rfintf.c */
/*#define DBLF*/

/* BLF -  PRINT_CODE - for print operation code, see rfrun1.c */
/*#define PRINT_CODE*/